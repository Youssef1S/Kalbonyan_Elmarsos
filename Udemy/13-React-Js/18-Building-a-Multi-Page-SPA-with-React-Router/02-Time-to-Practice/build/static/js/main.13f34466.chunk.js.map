{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/hooks/use-http.js","components/lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/quotes/HighlightedQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","HighlightedQuote","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedcommentHandler","QuoteDetail","match","useRouteMatch","path","exact","url","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.13f34466.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__MLwVE\",\"logo\":\"MainNavigation_logo__1G2IN\",\"nav\":\"MainNavigation_nav__2r8-v\",\"active\":\"MainNavigation_active__ASKEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2G8Qz\",\"loading\":\"QuoteForm_loading__B61C-\",\"control\":\"QuoteForm_control__BBj34\",\"actions\":\"QuoteForm_actions__1VTws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__21Syz\",\"loading\":\"NewCommentForm_loading__2hE8w\",\"control\":\"NewCommentForm_control__1EoCh\",\"actions\":\"NewCommentForm_actions__157eH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__25lwG\",\"sorting\":\"QuoteList_sorting__xYbef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1tjPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2CA2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2yk-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3rca3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3esnG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__Vvemi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3bXdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3qtg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3cCLn\"};","import { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Qutoes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Ascending\" : \"Descending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-routing-672fd-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useEffect } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getAllQuotes } from \"../components/lib/api\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validte here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n\n    console.log(isEntering);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { addQuote } from \"../components/lib/api\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuotehandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuotehandler} />\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className=\"centered\">\r\n      <p>Page note found!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\n\nimport useHttp from \"../hooks/use-http\";\nimport { addComment } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllComments } from \"../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedcommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedcommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\n\n\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);"],"sourceRoot":""}